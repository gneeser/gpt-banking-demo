import Head from 'next/head'
import Image from 'next/image'
import { FormEvent } from 'react'
import styles from '../styles/Home.module.css'
import { useState } from 'react'


export default function Home() {
  const [queryInput, setQueryInput] = useState("");
  const [sql, setSql] = useState();
  const [result, setResult] = useState();

  // Handle the submit event on form submit.
  const handleSubmit = async (event: FormEvent) => {
    // Stop the form from submitting and refreshing the page.
    event.preventDefault()

    // Cast the event target to an html form
    const form = event.target as HTMLFormElement

    // Get data from the form.
    const data = {
      natural_language_query: form?.natural_language_query?.value as string
    }

    const sql_query = await fetch('/api/render-query', {
      body: JSON.stringify(data),
      headers: {
        'Content-Type': 'application/json',
      },
      method: 'POST',
    });

    const sql_results = await sql_query.json()

    setSql(sql_results.data)

    const response = await fetch('/api/submit-query', {
      body: JSON.stringify({ sql_query: sql_results }),
      headers: {
        'Content-Type': 'application/json',
      },
      method: 'POST',
    });

    const result = await response.json()
    if(result.data && result.data !== "There was an error submitting the SQL to the database :(") result.data = formatResults(result.data)
    
    setResult(result.data)
  }

  function formatResults(res: Array<Object>){
    if(!res.length) return "No results found"
    
    // make a header row for the table with the keys of the first object
    let header = Object.keys(res[0]).map(key => <th>{key}</th>)
    // make a row for each object in the array
    let rows = res.map(row => <tr>{Object.values(row).map(val => <td>{val}</td>)}</tr>)
    return <table><thead><tr>{header}</tr></thead><tbody>{rows}</tbody></table>
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>GPT Natural Language to SQL</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to the GPT-powered banking demo!
        </h1>

        <p className={styles.description}>
          Get started by writing a query in natural language.
        </p>

        <form onSubmit={handleSubmit}>
          <label htmlFor='query'>
            <textarea
              id="natural_language_query"
              name="natural_language_query"
              placeholder="What would you like to know?"
              rows={5}
              cols={50}
              required
              value={queryInput}
              onChange={(e) => setQueryInput(e.target.value)}
            />
          </label>
          <br></br>
          <button type="submit">Submit</button>
        </form>
        <>
          <div className={styles.description}>{sql}</div>
        </>
        <>
          <div className={styles.description}>{result}</div>
        </>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

